<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cudo.pixelviewer.operate.mapper.ScreenMapper">

    <select id="getScreenList" resultType="com.cudo.pixelviewer.vo.ScreenVo">
        SELECT *
        FROM Screens
    </select>

<!--    <select id="getScreen" resultType="com.cudo.pixelviewer.vo.ScreenVo">-->
    <select id="getScreen" resultType="Map">
        SELECT screen_id AS screenId, screen_nm AS screennm, rowsize AS rowsize, columnsize AS columnsize
        FROM Screens
        WHERE Screens.screen_id = #{screenId}
    </select>
    <select id="getScreenAllocateDisplays" resultType="Map">
        SELECT SD.src_display_id AS srcDisplayId, SD.screen_id AS screenId, SD.display_id AS displayId, SD.rowsize AS rowsize, SD.columnsize AS columnsize,
                DS.display_nm AS displayNm, DS.gpu_nm AS gpuNm, DS.pos_x AS posX, DS.pos_y AS posY, DS.width AS width, DS.height AS height, DS.primary_fl AS primaryFl
        FROM Screen_Displays AS SD
                 LEFT JOIN Displays_Setting AS DS ON DS.display_id = SD.display_id
        WHERE screen_id = #{screenId}
    </select>

    <select id="postScreenValid" resultType="int">
        SELECT count(screen_id)
        FROM Screens
        WHERE screen_nm = #{screenNm}
            AND rowsize = #{rowsize}
            AND columnsize = #{columnsize}
    </select>
    <insert id="postScreen" parameterType="Map" useGeneratedKeys="true" keyColumn="screen_id"
            keyProperty="screenId">
        INSERT INTO Screens
        (
            screen_nm, rowsize, columnsize
        )
        VALUES
        (
            #{screenNm}, 0, 0
        )
    </insert>

    <select id="deleteScreenValid" resultType="int">
        SELECT COUNT(screen_id)
        FROM Screens
        WHERE Screens.screen_id = #{screenId}
    </select>
    <update id="deleteScreen">
        DELETE S.*, P.*, L.*, LO.*, EV.*, EI.*, ST.*
        FROM Screens AS S
            LEFT JOIN Presets as P ON P.screen_id = S.screen_id
            LEFT JOIN Layers as L ON L.screen_id = S.screen_id
            LEFT JOIN LayerObjects as LO ON LO.screen_id = S.screen_id
            LEFT JOIN ExternalVideo as EV ON EV.screen_id = S.screen_id
            LEFT JOIN External_Info as EI ON EI.screen_id = S.screen_id
            LEFT JOIN Subtitles as ST ON ST.screen_id = S.screen_id
        WHERE S.screen_id = #{screenId}
    </update>

    <select id="patchScreenNameValid" resultType="int">
        SELECT COUNT(screen_id)
        FROM Screens
        WHERE Screens.screen_id = #{screenId}
    </select>
    <update id="patchScreenName">
        UPDATE Screens
        SET screen_nm = #{screenNm}
        WHERE Screens.screen_id = #{screenId}
    </update>

    <select id="putScreenValid" resultType="int">
        SELECT COUNT(screen_id)
        FROM Screens
        WHERE Screens.screen_id = #{screenId}
    </select>
    <update id="putScreen">
        UPDATE Screens
        SET screen_nm = #{screenNm}, rowsize = #{rowsize}, columnsize = #{columnsize}
        WHERE Screens.screen_id = #{screenId}
    </update>
    <insert id="saveAllocateDisplays" parameterType="Map">
        INSERT INTO Screen_Displays
        (src_display_id, screen_id, display_id, rowsize, columnsize)
        VALUES
        <foreach collection="allocateDisplays" item="item" separator=",">
            (#{item.srcDisplayId}, #{item.screenId}, #{item.displayId},
            #{item.rowsize}, #{item.columnsize}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        screen_id = VALUES(screen_id),
        display_id = VALUES(display_id),
        rowsize = VALUES(rowsize),
        columnsize = VALUES(columnsize)
    </insert>

</mapper>

